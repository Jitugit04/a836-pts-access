<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="0" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-20T18:28:48 IST" name="Default suite" finished-at="2023-10-20T18:29:07 IST" duration-ms="19313">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@350aac89]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-10-20T18:28:48 IST" name="Default test" finished-at="2023-10-20T18:29:07 IST" duration-ms="19313">
      <class name="runners.TestRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runners.TestRunner@350aac89]" started-at="2023-10-20T18:28:48 IST" name="setUpClass" finished-at="2023-10-20T18:28:49 IST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@350aac89]" started-at="2023-10-20T18:28:49 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-10-20T18:28:59 IST" duration-ms="10793" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verification of Login button with numbers of credential"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Web Automation Login, fill info and logout"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.core.exception.CucumberException">
            <message>
              <![CDATA[Step [Fill in the account details user {string} password {int} in the login screen.] is defined with 3 parameters at 'Testcases.TestLoginExcelLogin.fill_in_the_account_details_user_password_in_the_login_screen(java.lang.String,java.lang.String,java.lang.Integer)'.
However, the gherkin step has 2 arguments:
 * "New XLS Worksheet"
 * 0
Step text: Fill in the account details user "New XLS Worksheet" password 0 in the login screen.]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.core.exception.CucumberException: Step [Fill in the account details user {string} password {int} in the login screen.] is defined with 3 parameters at 'Testcases.TestLoginExcelLogin.fill_in_the_account_details_user_password_in_the_login_screen(java.lang.String,java.lang.String,java.lang.Integer)'.
However, the gherkin step has 2 arguments:
 * "New XLS Worksheet"
 * 0
Step text: Fill in the account details user "New XLS Worksheet" password 0 in the login screen.
at io.cucumber.core.runner.PickleStepDefinitionMatch.arityMismatch(PickleStepDefinitionMatch.java:134)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:42)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)
at io.cucumber.core.runner.TestStep.run(TestStep.java:49)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)
at io.cucumber.core.runner.TestCase.run(TestCase.java:51)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:67)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:124)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.core.exception.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@350aac89]" started-at="2023-10-20T18:28:59 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-10-20T18:29:07 IST" duration-ms="7207" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verification of Login button with numbers of credential"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Web Automation Login, fill info and logout"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.core.exception.CucumberException">
            <message>
              <![CDATA[Step [Fill in the account details user {string} password {int} in the login screen.] is defined with 3 parameters at 'Testcases.TestLoginExcelLogin.fill_in_the_account_details_user_password_in_the_login_screen(java.lang.String,java.lang.String,java.lang.Integer)'.
However, the gherkin step has 2 arguments:
 * "New XLS Worksheet"
 * 1
Step text: Fill in the account details user "New XLS Worksheet" password 1 in the login screen.]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.core.exception.CucumberException: Step [Fill in the account details user {string} password {int} in the login screen.] is defined with 3 parameters at 'Testcases.TestLoginExcelLogin.fill_in_the_account_details_user_password_in_the_login_screen(java.lang.String,java.lang.String,java.lang.Integer)'.
However, the gherkin step has 2 arguments:
 * "New XLS Worksheet"
 * 1
Step text: Fill in the account details user "New XLS Worksheet" password 1 in the login screen.
at io.cucumber.core.runner.PickleStepDefinitionMatch.arityMismatch(PickleStepDefinitionMatch.java:134)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:42)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64)
at io.cucumber.core.runner.TestStep.run(TestStep.java:49)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46)
at io.cucumber.core.runner.TestCase.run(TestCase.java:51)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:67)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:124)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.core.exception.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.TestRunner@350aac89]" started-at="2023-10-20T18:29:07 IST" name="tearDownClass" finished-at="2023-10-20T18:29:07 IST" duration-ms="498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
